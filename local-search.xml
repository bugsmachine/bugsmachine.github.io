<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CAN201 CPT205 Introduction to Networking 1: protocol, layer and model…</title>
    <link href="/2023/09/13/CAN201-security-1/"/>
    <url>/2023/09/13/CAN201-security-1/</url>
    
    <content type="html"><![CDATA[<p>This is a protected page, you need password to view the content. This page will automatically release at 2024-09-13 15:58:20. Please contact <a href="mailto:&#x63;&#97;&#111;&#x64;&#105;&#x6e;&#x67;&#x6a;&#105;&#x65;&#x40;&#x67;&#x6d;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;">&#x63;&#97;&#111;&#x64;&#105;&#x6e;&#x67;&#x6a;&#105;&#x65;&#x40;&#x67;&#x6d;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;</a> if you want view now.<br><!DOCTYPE html></p><html><head>  <title>Password Protected Page</title>  <style>    body {      font-family: Arial, sans-serif;      background-color: #f2f2f2;    }    h1 {      text-align: center;      color: #333;    }    .container12121 {      max-width: 500px;      margin: 0 auto;      padding: 20px;      background-color: #fff;      border-radius: 5px;      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);    }    label {      display: block;      margin-bottom: 10px;      color: #555;    }    input[type="password"] {      width: 100%;      padding: 10px;      border-radius: 3px;      border: 1px solid #ccc;    }    button {      display: block;      width: 100%;      padding: 10px;      margin-top: 20px;      background-color: #4caf50;      color: #fff;      border: none;      border-radius: 3px;      cursor: pointer;    }    button:hover {      background-color: #45a049;    }    .alert {      margin-bottom: 15px;      padding: 10px;      border-radius: 3px;    }    .alert.error {      background-color: #f44336;      color: #fff;    }    .alert.success {      background-color: #4CAF50;      color: #fff;    }  </style></head><body>  <div class="container12121">    <h1>Password Protected Page</h1>    <label for="password">Enter Password:</label>    <input type="password" id="password" />    <button onclick="checkPassword()">Submit</button>  </div>  <div class="alert"></div>  <script>    function checkPassword() {      var enteredPassword = document.getElementById("password").value;      var correctPassword = "Cdj030824"; // Replace with your desired password      if (enteredPassword === correctPassword) {        showAlert('Success Log In','Page Loading...','Please wait a few second to load page.', 'success');        redirectToWebpage();      } else {        showAlert('Failed Log In','Incorrect password!','Please try again.', 'error');      }    }    function redirectToWebpage() {      var webpageURL = "https://bugsmachine.github.io/2023/09/12/CAN201-1/"; // Replace with the URL of the webpage you want to redirect to      window.location.href = webpageURL;    }    function showAlert(title, message, description, type) {      var alertDiv = document.querySelector('.alert');      alertDiv.classList.remove('error', 'success');      alertDiv.classList.add(type);      alertDiv.innerHTML = '<strong>' + title + '</strong><br>' + message + '<br>' + description;    }  </script></body></html>]]></content>
    
    
    <categories>
      
      <category>CPT205 Introduction to Networking</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Introduction to Networking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CPT203 Software Engineering I 1: Introduction</title>
    <link href="/2023/09/12/CPT203-security-1/"/>
    <url>/2023/09/12/CPT203-security-1/</url>
    
    <content type="html"><![CDATA[<p>This is a protected page, you need password to view the content. This page will automatically release at 2024-09-13 15:58:20. Please contact <a href="mailto:&#99;&#97;&#x6f;&#x64;&#105;&#x6e;&#103;&#106;&#x69;&#101;&#x40;&#x67;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;">&#99;&#97;&#x6f;&#x64;&#105;&#x6e;&#103;&#106;&#x69;&#101;&#x40;&#x67;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a> if you want view in advance.<br><!DOCTYPE html></p><html><head>  <title>Password Protected Page</title>  <style>    body {      font-family: Arial, sans-serif;      background-color: #f2f2f2;    }    h1 {      text-align: center;      color: #333;    }    .container12121 {      max-width: 500px;      margin: 0 auto;      padding: 20px;      background-color: #fff;      border-radius: 5px;      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);    }    label {      display: block;      margin-bottom: 10px;      color: #555;    }    input[type="password"] {      width: 100%;      padding: 10px;      border-radius: 3px;      border: 1px solid #ccc;    }    button {      display: block;      width: 100%;      padding: 10px;      margin-top: 20px;      background-color: #4caf50;      color: #fff;      border: none;      border-radius: 3px;      cursor: pointer;    }    button:hover {      background-color: #45a049;    }    .alert {      margin-bottom: 15px;      padding: 10px;      border-radius: 3px;    }    .alert.error {      background-color: #f44336;      color: #fff;    }    .alert.success {      background-color: #4CAF50;      color: #fff;    }  </style></head><body>  <div class="container12121">    <h1>Password Protected Page</h1>    <label for="password">Enter Password:</label>    <input type="password" id="password" />    <button onclick="checkPassword()">Submit</button>  </div>  <div class="alert"></div>  <script>    function checkPassword() {      var enteredPassword = document.getElementById("password").value;      var correctPassword = "Cdj030824"; // Replace with your desired password      if (enteredPassword === correctPassword) {        showAlert('Success Log In','Page Loading...','Please wait a few second to load page.', 'success');        redirectToWebpage();      } else {        showAlert('Failed Log In','Incorrect password!','Please try again.', 'error');      }    }    function redirectToWebpage() {      var webpageURL = "https://bugsmachine.github.io/2023/09/12/CPT203-1/"; // Replace with the URL of the webpage you want to redirect to      window.location.href = webpageURL;    }    function showAlert(title, message, description, type) {      var alertDiv = document.querySelector('.alert');      alertDiv.classList.remove('error', 'success');      alertDiv.classList.add(type);      alertDiv.innerHTML = '<strong>' + title + '</strong><br>' + message + '<br>' + description;    }  </script></body></html>]]></content>
    
    
    <categories>
      
      <category>CPT203 Software Engineering I</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Software Engineering</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CPT205 Computer Graphics 1: General Introduction to Hardware and Software</title>
    <link href="/2023/09/12/CPT205-security-1/"/>
    <url>/2023/09/12/CPT205-security-1/</url>
    
    <content type="html"><![CDATA[<p>This is a protected page, you need password to view the content. This page will automatically release at 2024-09-13 15:58:20. Please contact <a href="mailto:&#99;&#x61;&#x6f;&#100;&#x69;&#x6e;&#103;&#106;&#x69;&#101;&#64;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;">&#99;&#x61;&#x6f;&#100;&#x69;&#x6e;&#103;&#106;&#x69;&#101;&#64;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a> if you want view now.<br><!DOCTYPE html></p><html><head>  <title>Password Protected Page</title>  <style>    body {      font-family: Arial, sans-serif;      background-color: #f2f2f2;    }    h1 {      text-align: center;      color: #333;    }    .container12121 {      max-width: 500px;      margin: 0 auto;      padding: 20px;      background-color: #fff;      border-radius: 5px;      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);    }    label {      display: block;      margin-bottom: 10px;      color: #555;    }    input[type="password"] {      width: 100%;      padding: 10px;      border-radius: 3px;      border: 1px solid #ccc;    }    button {      display: block;      width: 100%;      padding: 10px;      margin-top: 20px;      background-color: #4caf50;      color: #fff;      border: none;      border-radius: 3px;      cursor: pointer;    }    button:hover {      background-color: #45a049;    }    .alert {      margin-bottom: 15px;      padding: 10px;      border-radius: 3px;    }    .alert.error {      background-color: #f44336;      color: #fff;    }    .alert.success {      background-color: #4CAF50;      color: #fff;    }  </style></head><body>  <div class="container12121">    <h1>Password Protected Page</h1>    <label for="password">Enter Password:</label>    <input type="password" id="password" />    <button onclick="checkPassword()">Submit</button>  </div>  <div class="alert"></div>  <script>    function checkPassword() {      var enteredPassword = document.getElementById("password").value;      var correctPassword = "Cdj030824"; // Replace with your desired password      if (enteredPassword === correctPassword) {        showAlert('Success Log In','Page Loading...','Please wait a few second to load page.', 'success');        redirectToWebpage();      } else {        showAlert('Failed Log In','Incorrect password!','Please try again.', 'error');      }    }    function redirectToWebpage() {      var webpageURL = "https://bugsmachine.github.io/2023/09/12/CPT205-1/"; // Replace with the URL of the webpage you want to redirect to      window.location.href = webpageURL;    }    function showAlert(title, message, description, type) {      var alertDiv = document.querySelector('.alert');      alertDiv.classList.remove('error', 'success');      alertDiv.classList.add(type);      alertDiv.innerHTML = '<strong>' + title + '</strong><br>' + message + '<br>' + description;    }  </script></body></html>]]></content>
    
    
    <categories>
      
      <category>CPT205 Computer Graphics</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Computer Graphics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Solve CORS Problems in Google Chrome</title>
    <link href="/2023/09/08/CORS/"/>
    <url>/2023/09/08/CORS/</url>
    
    <content type="html"><![CDATA[<h1 id="Solve-CORS-Problems-in-Google-Chrome"><a href="#Solve-CORS-Problems-in-Google-Chrome" class="headerlink" title="Solve CORS Problems in Google Chrome"></a>Solve CORS Problems in Google Chrome</h1><p>If you want to test your api in your webpage opened in Google Chrome, most of time the request will be blocked by CORS policy like the situation in figure 1.</p><div>  <figure>    <img src="/img/23-09-08-1/2.png" alt="Figure1: CORS problem">    <p style="text-align: center;">Figure1: CORS problem</p>  </figure></div><h2 id="Introduction-to-CORS-Cross-Origin-Resource-Sharing"><a href="#Introduction-to-CORS-Cross-Origin-Resource-Sharing" class="headerlink" title="Introduction to CORS (Cross-Origin Resource Sharing)"></a>Introduction to CORS (Cross-Origin Resource Sharing)</h2><p>Cross-Origin Resource Sharing (CORS) is a security mechanism implemented in web browsers to control cross-origin HTTP requests. It allows web applications running in one domain to request resources (such as data or assets) from another domain, which would otherwise be restricted by the same-origin policy.</p><p>The same-origin policy is a fundamental security concept that prevents web pages from making requests to a different domain. However, there are legitimate scenarios where cross-origin requests are necessary, such as accessing APIs, embedding content from external sources, or implementing client-server architectures.</p><h2 id="Disable-Google-Chrome-security"><a href="#Disable-Google-Chrome-security" class="headerlink" title="Disable Google Chrome security"></a>Disable Google Chrome security</h2><p>You can disable chrome’s security to allow the access to your APIs, this operation will not affect your google itself. You will have 2 chrome in your machine, one is normal and one is disabled security. </p><h3 id="1-Create-a-folder-in-document"><a href="#1-Create-a-folder-in-document" class="headerlink" title="1. Create a folder in document"></a>1. Create a folder in document</h3><p>Go to Windows (C:) -&gt; User -&gt; Your username -&gt; Document. Create a folder called my and in my folder create a folder called data. Just keep data folder empty.</p><h3 id="2-Create-a-bat-file-via-notepad"><a href="#2-Create-a-bat-file-via-notepad" class="headerlink" title="2. Create a .bat file via notepad"></a>2. Create a .bat file via notepad</h3><p>Open notepad and write this 2 line command, you can copy from here but need to replace the path to chrome.exe with yours and replace <code>xxxx</code> with your user name.</p><figure><div class="code-wrapper"><pre class="line-numbers language-command" data-language="command"><code class="language-command">cd C:\Program Files (x86)\Google\Chrome\Applicationchrome.exe --user-data-dir&#x3D;&quot;C:\Users\XXXX(replace with  your folder name)\Documents\my\data&quot; --disable-web-security<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>Save the notepad as a .bat file to your desktop and then you can double click the .bat file to open a new chrome with security disabled.</p><div>  <figure>    <img src="/img/23-09-08-2/1.png" alt="Figure2: Save as a .bat file">    <p style="text-align: center;">Figure2: Save as a .bat file</p>  </figure></div><p>You can now use my mini program with your local back-end api. Please pay attention, <span style="color: red;">this chrome is not safe in some condition,</span>, I advise you to only test api in this security disabled chrome.</p><h2 id="End…"><a href="#End…" class="headerlink" title="End…"></a>End…</h2><p>Hope you fix your problem!!!<br>have a nice day!!!</p>]]></content>
    
    
    <categories>
      
      <category>Django</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Problem Shouting</tag>
      
      <tag>CORS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Use JavaFX to build a calculator desktop application 1: Prerequisites</title>
    <link href="/2023/09/07/post3/"/>
    <url>/2023/09/07/post3/</url>
    
    <content type="html"><![CDATA[<h1 id="Use-JavaFX-to-build-a-calculator-desktop-application-1-Prerequisites"><a href="#Use-JavaFX-to-build-a-calculator-desktop-application-1-Prerequisites" class="headerlink" title="Use JavaFX to build a calculator desktop application 1: Prerequisites"></a>Use JavaFX to build a calculator desktop application 1: Prerequisites</h1><p>In this section, we are going to try some basic JavaFX to write GUI (Graphic User Interface) for a calculator desktop application. It should achieve some basic application’s operation such as user management, alert system, import and save operations ans so on. </p><h2 id="Download-JavaFX"><a href="#Download-JavaFX" class="headerlink" title="Download JavaFX"></a>Download JavaFX</h2><p>Starting from Java 11, JavaFX is no longer bundled with the Java Development Kit (JDK). But you still need a Java environment to run JavaFx. You need download <a href="https://www.java.com/download/ie_manual.jsp">Java</a> first, if you donot have it.</p><p>You can visit <a href="https://openjfx.io/">official JavaFX website</a> to learn more about JavaFX and download the latest stable version in <a href="https://gluonhq.com/products/javafx/">Gluon</a>. </p><p>Once the download is complete, you need to extract the zip file. You will have a JavaFX distribution specific to your operating system whichS includes the necessary JAR files, libraries, and documentation to develop JavaFX applications. </p><h2 id="Add-SDK-library-to-your-editor"><a href="#Add-SDK-library-to-your-editor" class="headerlink" title="Add SDK library to your editor"></a>Add SDK library to your editor</h2><p>The operation depends on the exact editor you are using now. Here I just explain how t config in Intellij IDEA. You can download <a href="https://www.jetbrains.com/idea/download/?section=windows">Intellij IDEA</a> if you also want to use this editor. </p><p>Create a new JavaFX project and choose a build system, both Maven and Gradle is fine. You can ignore to add the addition libraries. After that, you need to go to file -&gt; Program Structure -&gt; Libraries to add a new library. Click the ‘+’ and choose Java, import the lib folder in the SDK folder you just extract and apply the change. All red waring should disappear if you successfully add the library.</p><h2 id="Add-VM-virtual-machine-options"><a href="#Add-VM-virtual-machine-options" class="headerlink" title="Add VM (virtual machine) options"></a>Add VM (virtual machine) options</h2><p>Go to <a href="https://openjfx.io/openjfx-docs/">JavaFX document webpage</a>, find add vm options in Non-modular from IDE. You can see the same in page in figure 1. Copy the path that suit your OS system.</p><p>Back to Intellij, go to Run -&gt; Edit Configurations, paste the path but remember to replace the SKD address. The path for windows is <code>--module-path &quot;\path\to\javafx-sdk-20\lib&quot; --add-modules javafx.controls,javafx.fxml</code>, but you need to replace <code>\path\to\javafx-sdk-20\lib</code> with the lib folder’s path of your SDK.</p><div style="display: flex; justify-content: space-between;">  <figure>    <img src="/img/23-09-07-2/1.png" alt="Figure1: VM Path" width="500" height="200">    <p style="text-align: center;">Figure1: VM Path</p>  </figure>  <figure>    <img src="/img/23-09-07-2/2.png" alt="Figure2: Edit Configurations" width="500" height="200">    <p style="text-align: center;">Figure2: Edit Configurations</p>  </figure></div><h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>You can go to Main class or HelloApplication class to run the program. If a small window of Hello word exist, that means you successfully download and install JavaFX. You should see a window similar to figure 3 and you can click the ‘Hello!’ button, it should jump to a new window in figure 4.</p><div style="display: flex; justify-content: space-between;">  <figure>    <img src="/img/23-09-07-2/3.png" alt="Figure3: Hello window" width="500" height="280">    <p style="text-align: center;">Figure3: Hello window</p>  </figure>  <figure>    <img src="/img/23-09-07-2/4.png" alt="Figure4: Window after click hello button" width="500" height="280">    <p style="text-align: center;">Figure4: Window after click hello button</p>  </figure></div><h2 id="End…"><a href="#End…" class="headerlink" title="End…"></a>End…</h2><p>Now, you already finished all the prerequisites to lunch a JavaFx programme. We will start to build the calculator program in next blog.<br>Have a nice day!!!</p>]]></content>
    
    
    <categories>
      
      <category>JavaFX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Desktop Application</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to fix when terminal shows that &#39;pip&#39; is not a recognized command?</title>
    <link href="/2023/09/07/post2/"/>
    <url>/2023/09/07/post2/</url>
    
    <content type="html"><![CDATA[<h1 id="How-to-fix-when-terminal-shows-that-‘pip’-is-not-a-recognized-command"><a href="#How-to-fix-when-terminal-shows-that-‘pip’-is-not-a-recognized-command" class="headerlink" title="How to fix when terminal shows that ‘pip’ is not a recognized command?"></a>How to fix when terminal shows that ‘pip’ is not a recognized command?</h1><p>Sometime the terminal will show ‘pip is not recognized as an internal or external command’ when you want to install something via pip. This is because ‘pip’ is not in your system’s PATH environment variable. </p><p>However, pip should be added to environment variable automatically when you download Python. But you can still manually add it to environment variable follow thew following steps.</p><h2 id="Check-Python-Installation"><a href="#Check-Python-Installation" class="headerlink" title="Check Python Installation"></a>Check Python Installation</h2><p>Make sure you have Python installed on your system. Pip is typically installed automatically with Python. If you haven’t installed Python yet, <a href="https://www.python.org/downloads/">download and install it</a> from the official Python website.</p><p>You can type command <code>python --version</code> to check python installation.</p><h2 id="Add-Python-to-PATH"><a href="#Add-Python-to-PATH" class="headerlink" title="Add Python to PATH"></a>Add Python to PATH</h2><p>During the Python installation process, there is an option to add Python to the system’s PATH environment variable. Ensure that this option is selected, as it allows you to access Python and its related tools, including pip, from any directory in the command prompt. </p><p>If you missed this option during the installation, you can reinstall Python and ensure the option is selected.</p><h2 id="Verify-PATH-Configuration"><a href="#Verify-PATH-Configuration" class="headerlink" title="Verify PATH Configuration"></a>Verify PATH Configuration</h2><p>If Python is already installed but pip is still not recognized, check if the Python installation directory is added to the PATH environment variable. Follow these steps:</p><ol><li>Open the Control Panel and go to System and Security &gt; System (figure 1, 2).</li><li>Click on “Advanced system settings” on the left (figure 3).</li></ol><div style="display: flex; justify-content: space-between;">  <figure>    <img src="/img/23-09-07-1/1.png" alt="Figure1: Control Panel" width="333" height="120">    <p style="text-align: center;">Figure1: Control Panel</p>  </figure>  <figure>    <img src="/img/23-09-07-1/2.png" alt="Figure2: System and Security" width="333" height="120">    <p style="text-align: center;">Figure2: System and Security</p>  </figure>  <figure>    <img src="/img/23-09-07-1/3.png" alt="Figure3: System" width="333" height="120">    <p style="text-align: center;">Figure3: System</p>  </figure></div><ol start="3"><li>In the System Properties window, click on the “Environment Variables” button.</li><li>Under “System variables,” locate the “Path” variable and double click.</li></ol><div style="display: flex; justify-content: space-between;">  <figure>    <img src="/img/23-09-07-1/4.png" alt="Figure4: Advanced system settings" width="500" height="300">    <p style="text-align: center;">Figure4: Advanced system settings</p>  </figure>  <figure>    <img src="/img/23-09-07-1/5.png" alt="Figure5: Environment Variables" width="500" height="300">    <p style="text-align: center;">Figure5: Environment Variables</p>  </figure></div><ol start="5"><li>Ensure that the Python installation directory<br>(e.g., C:\Users\YourUsername\AppData\Local\Programs\Python\Python311\python.exe) is listed. If it’s not, click “New” and add the directory path.</li><li>Click “OK” to save the changes.</li><li>Restart the machine!!!!!!</li></ol><h2 id="Restart-the-Command-Prompt"><a href="#Restart-the-Command-Prompt" class="headerlink" title="Restart the Command Prompt"></a>Restart the Command Prompt</h2><p>After modifying the PATH environment variable, close and reopen the command prompt window to apply the changes. Then try running the pip command again to see if it’s recognized.</p><h2 id="Still-not-fixed"><a href="#Still-not-fixed" class="headerlink" title="Still not fixed!!"></a>Still not fixed!!</h2><p>If you successfully add python to PATH environment variable but terminal still cannot recognize pip command, you can still install pip via download <a href="https://pypi.org/project/pip/#files">pip files</a>. You need to decompressing files and follow the <a href="https://pip.pypa.io/en/stable/">document guidance</a></p><h2 id="End…"><a href="#End…" class="headerlink" title="End…"></a>End…</h2><p>Hope you have already fixed your problem. Have a nice day!!!</p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Django</tag>
      
      <tag>Pip</tag>
      
      <tag>Problem Shouting</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Use Django to build API for a calculator app 1: Prerequisites</title>
    <link href="/2023/09/06/post1/"/>
    <url>/2023/09/06/post1/</url>
    
    <content type="html"><![CDATA[<h1 id="Use-Django-to-build-a-calculator-app-1-Prerequisites"><a href="#Use-Django-to-build-a-calculator-app-1-Prerequisites" class="headerlink" title="Use Django to build a calculator app 1: Prerequisites"></a>Use Django to build a calculator app 1: Prerequisites</h1><p>In this section we are going to achieve the back-end for a calculator app by using Django. We only focus on the basic usage of Django to build api in local environment, so there is no strong requirements for design database or deploy the api. I believe you can make this!!</p><h2 id="Introduction-to-Django"><a href="#Introduction-to-Django" class="headerlink" title="Introduction to Django"></a>Introduction to Django</h2><p>Django is a high-level Python web framework that follows the Model-View-Controller (MVC) architectural pattern. It provides a robust set of tools and libraries for building web applications quickly and efficiently. Django follows the principle of “batteries included,” which means it comes with many built-in features and functionalities, allowing developers to focus on writing application code rather than dealing with common web development tasks.<br><a href="https://www.djangoproject.com/">View Django official webpage</a></p><h2 id="Download-and-config-environment"><a href="#Download-and-config-environment" class="headerlink" title="Download and config environment"></a>Download and config environment</h2><h3 id="Download-Python"><a href="#Download-Python" class="headerlink" title="Download Python"></a>Download Python</h3><p>Django is a Python framework, so you need to have Python environment first. I recommend you to download the latest security version <a href="https://www.python.org/downloads/"> Python 3.11.5</a>. Follow the installation guidance and run command ‘python’ in terminal. If your terminal shows the same in Figure 1, it means you successfully download Python. Also, you can try some easy additions to double-check.</p><div style="text-align: center;">  <img src="/img/23-09-06-1/2.png" alt="Check python installation" >  <p style="text-align: center;">Figure1: Check python installation</p></div><h3 id="Config-virtual-environment-and-editor"><a href="#Config-virtual-environment-and-editor" class="headerlink" title="Config virtual environment and editor"></a>Config virtual environment and editor</h3><p>Then, we need to create a virtual environment to install our Django project dependencies. You can quickly download by using ‘pip’, enter <code>pip install pipenv</code> in terminal. Please check this blog of my: <a href="https://bugsmachine.github.io/2023/09/07/post2/">How to config PIP if terminal shows “pip” is not a recognized command</a> if you cannot use pip but you have python environment. </p><p>Now, you need to choose a editor or IDE you like. I am using VS Code but you can also choose other editors like pycharm… You can download <a href="https://code.visualstudio.com/download">VS code</a> here if you donot have it. Once you have it, you need to go to extensions to install Python extension shows in figure 2.</p><div style="text-align: center;">  <img src="/img/23-09-06-1/3.png" alt="Python extension" >  <p style="text-align: center;">Figure2: Python extension</p></div><p>After that, you need to config the vs code’s python interpreter to run the terminal inside vs code. Go to the terminal outside vs code and run command <code>pipenv --venv</code> to check the path and copy it. Go back to vs code, search python interpreter and paste the path with appending ‘&#x2F;bin&#x2F;python’ at the end. </p><p>Now you can open terminal in vs code (under View). If you see your terminal automatically navigate and activate the virtual environment, that means you successfully config the virtual python interpreter.</p><p>Okay, all necessary tools are installed, you can create your first Django project now.</p><h2 id="Create-Django-project"><a href="#Create-Django-project" class="headerlink" title="Create Django project"></a>Create Django project</h2><p>You need to choose a folder for the Django project and install django in the virtual environment. You can create directly or use the terminal. Here is what I do:</p><div><figure><div class="code-wrapper"><pre class="line-numbers language-command" data-language="command"><code class="language-command">cd desktopmkdir storefrontcd storefrontpipenv install djangocode .<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></div><p>Line 1-3 create the folder ‘storefront’ in desktop, line 4 is download django in virtual environment and line 5 is open the folder in vscode. Once you open the project in vs code, you need to active the virtual environment and use python interpreter inside using this command <code>pipenv shell</code>. </p><p>After this, you can open a new Django project via command <code>django-admin startproject xxxxx</code>, here ‘xxxxx’ is the project name. I just name the project storefront the same as the folder name. You will see the the same interface in figure 3 if you successfully create the project. </p><p>Now, you can try command <code>python manage.py runserver</code>, you can ignore the error of unapplied migrations and go to <a href="http://127.0.0.1:800/">http://127.0.0.1:800/</a> (this is the default url) tp check if the server work well. If you see the webpage like figure 4, congratulation, you successfully run your first Django project. Please pay attention, this webpage will only show up for the first time you run the server.</p><div style="display: flex; justify-content: space-between;">  <figure>    <img src="/img/23-09-06-1/4.png" alt="Interface after create a project" width="500" height="200">    <p style="text-align: center;">Figure3: Interface after create a project</p>  </figure>  <figure>    <img src="/img/23-09-06-1/1.png" alt="Successfully run the project" width="500" height="200">    <p style="text-align: center;">Figure4: Successfully run the project</p>  </figure></div><h2 id="End…"><a href="#End…" class="headerlink" title="End…."></a>End….</h2><p>You must successfully finished everything if you see this section. Next blog we will discuss about settings and urls of your django project.<br>Have a nice day!!!</p>]]></content>
    
    
    <categories>
      
      <category>Django</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Django</tag>
      
      <tag>API</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DIY a plug-in box for a small water flow environment to breed baby Christmas Tree Coral</title>
    <link href="/2023/08/26/coral1/"/>
    <url>/2023/08/26/coral1/</url>
    
    <content type="html"><![CDATA[<h1 id="DIY-a-plug-in-box-for-a-small-water-flow-environment-to-breed-baby-Christmas-Tree-Coral"><a href="#DIY-a-plug-in-box-for-a-small-water-flow-environment-to-breed-baby-Christmas-Tree-Coral" class="headerlink" title="DIY a plug-in box for a small water flow environment to breed baby Christmas Tree Coral"></a>DIY a plug-in box for a small water flow environment to breed baby Christmas Tree Coral</h1><p>Hi there! Let’s kick off my Coral World series with this blog post. After a busy summer of SURF work, I finally have some time to focus on my personal projects. Recently, I noticed that my mother-Christmas tree coral has grown significantly since the last time I saw it a month ago. Although I’m not sure of the exact English name for it, let’s simply refer to it as the Christmas tree coral (because it really does resemble one!).</p><div style="display: flex; justify-content: space-between;">  <figure>    <img src="/img/23-08-26-1/6.jpg" alt="Figure1: Mother Christmas Tree Coral" width="500" height="200">    <p style="text-align: center;">Figure1: Mother Christmas Tree Coral</p>  </figure>  <figure>    <img src="/img/23-08-26-1/7.jpg" alt="Figure2: My friend'sChristmas Tree Coral" width="500" height="200">    <p style="text-align: center;">Figure2: My friend'sChristmas Tree Coral</p>  </figure></div><h2 id="Experience-to-raise-a-Christmas-Tree-Coral"><a href="#Experience-to-raise-a-Christmas-Tree-Coral" class="headerlink" title="Experience to raise a Christmas Tree Coral"></a>Experience to raise a Christmas Tree Coral</h2><p>I bought a baby Christmas Tree Coral in December 2022. I don’t know the price in your country but it is really a cheap kind of coral in China, usually only need 20 Chinese yuan (about 2 pounds) for a 3cm juvenile. It’s unnecessary to buy a big one because it can grow at an extraordinary speed beyond your imagination! My tree grew 12cm in 8 months！ Raising this species can bring you a full sense of achievement, you can directly see the growth (see more and more money ~). </p><p>Moreover, this is nearly the most easily raised coral. You don’t need to worry about NO<sub>2</sub> and NO<sub>3</sub>, what you need to do is keep the salinity at 1.020-1.025, and temperature in 25-28 degrees Celsius. I am sure you will get a healthy and thriving Christmas Tree Coral after a few months.</p><div style="display: flex; justify-content: space-between;">  <figure>    <img src="/img/23-08-26-1/3.png" alt="Figure3: Just bought" width="300" height="200">    <p style="text-align: center;">Figure3: Just bought</p>  </figure>  <figure>    <img src="/img/23-08-26-1/5.jpg" alt="Figure4: 3 month after" width="300" height="200">    <p style="text-align: center;">Figure4: 3 month after</p>  </figure>  <figure>    <img src="/img/23-08-26-1/2.jpg" alt="Figure5: Now(8 month after)" width="300" height="200">    <p style="text-align: center;">Figure5: Now(8 month after)</p>  </figure></div><h2 id="How-a-Christmas-Tree-Coral-reproduct-in-ocean"><a href="#How-a-Christmas-Tree-Coral-reproduct-in-ocean" class="headerlink" title="How a Christmas Tree Coral reproduct in ocean?"></a>How a Christmas Tree Coral reproduct in ocean?</h2><p>From a technical standpoint, the Christmas tree coral has the ability to undergo natural propagation once it reaches a certain size. When the main branch grows to approximately 15cm or larger, it can be considered an ‘adult’ capable of reproduction. An interesting phenomenon occurs where the baby branch fills with an increased amount of water while the other branches experience dehydration. Eventually, the pressure causes the baby branch to separate or be ‘cut off’ from the main branch. This process results in the birth of a baby Christmas tree coral, which is truly a wondrous event. </p><p>If your tank is big enough, you can find 3-5 baby Christmas Tree corals per month in your bottom sand surface (if you have). If you have a big Christmas Tree Coral and never found a baby Christmas Tree Coral, maybe the water flow is too torrential that the baby Christmas Tree Coral cannot stick to something, wash away in to filter bin and killed.</p><h2 id="How-to-manual-breed-a-Christmas-Tree-Coral"><a href="#How-to-manual-breed-a-Christmas-Tree-Coral" class="headerlink" title="How to manual breed a Christmas Tree Coral"></a>How to manual breed a Christmas Tree Coral</h2><p>However, in my case, my tank is not spacious enough to accommodate the coral’s growth to a size suitable for natural ‘propagation’. Therefore, I need to employ some magical techniques (manual intervention) to assist in its parturition. So, how to manually breed a Christmas Tree Coral? In short, just cut! What we need to do is cut a branch off using a scissor instead of water pressure. But keep in mind, you need to confirm your water is clean and pure enough (avoid bacterial infection)!!!!! <em>IMPORTANT!!</em></p><p>Secondly, find an area with flat water and sand which can give the baby tree a place to stick to sand. <em>Attention</em>, you can not stick a baby tree by using coral glue like what you did to an SPS. Christmas Tree corals can generate a kind of mucus to escape from glue, what you need to do is let itself stick to some sand or corallum and you can then stick it (together with sand) to every you want by using coral glue.</p><div style="text-align: center;">  <img src="/img/23-08-26-1/4.jpg" alt="Figure6: 2 baby trees" width="300" height="220">  <p style="text-align: center;">Figure6: 2 baby trees</p></div><h2 id="What-if-you-donot-have-an-area-with-flat-water-and-sand"><a href="#What-if-you-donot-have-an-area-with-flat-water-and-sand" class="headerlink" title="What if you donot have an area with flat water and sand?"></a>What if you donot have an area with flat water and sand?</h2><p>My suggestion is by an external isolation box (if you have an adequate budget). However, as a university student(poor~~~), a DIY product may be the first choice. You only need to prepare a plastic box (I used a take-out container), a small water pump, some pipe, a metal screwdriver, and a lighter. Screwdriver and lighter are employed to trepanning on a plastic box, you need to heat the screwdriver which can easily melt plastic. You can use anything else you have to trepan as plastic is not a hard material.</p><p>The principle is to pump water from the main tank and overflow back to the main tank. You can also use some coral glue to leak stoppage and avoid water leakage. Also, you need to pay attention to the size and number of outfalls you make. Water will overflow outside the box if the outfall is too small or not enough in numbers. This is what I made, cost only 2 Chinese yuan (about 0.2 pounds).</p><div style="text-align: center;">  <img src="/img/23-08-26-1/1.jpg" alt="Figure7: DIY plug-in Box" width="300" height="220">  <p style="text-align: center;">Figure7: DIY plug-in Box</p></div><h2 id="End…"><a href="#End…" class="headerlink" title="End…."></a>End….</h2><p>Okay, now you already know everything about how to breed Christmas Tree Coral in your tank. You can have a try if you want. Hope you can have a beautiful ocean in your tank!! Hurray!!! See you next time!!!!</p>]]></content>
    
    
    <categories>
      
      <category>Coral</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Coral</tag>
      
      <tag>Breeding</tag>
      
      <tag>DIY Equipment</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
